// Factory
MarshalByRefObject tmpObj = (MarshalByRefObject) RemotingServices.Connect(
typeof(IFabrique), “Tcp://localhost:65100/ServiceFabrique");

// Client Side
// Contract
namespace Div.ServiceContract {
    [Serializable]
    public class compte() {
        int name;
    }
    public interface IClient {
        void printName(int name) throws RemoteException();
    }
}

namespace Div.ServiceImpl {
    using Div.ServiceContract
    public class ServiceImpl: MarshalRefByObject, IClient {
        public void printName(int name) {
            Console.WriteLine(name);
        }
    }
}

// Server Side

namespace Div.Host.SAO {
    using Div.ServiceContract;
    using Div.ServiceImpl;
    class DivHost {
        [STAThread]
        static void Main(string[] args) {
            // création et enregistrement d’un canal HTTP avec un N° port = 8081
            ChannelServices.RegisterChannel(new HttpChannel(8081));
            RemotingConfiguration.RegisterWellKnownServiceType(typeof (DivService),
                "division/singleton", WellKnownObjectMode.Singleton); // SINGLETON
            RemotingConfiguration.RegisterWellKnownServiceType(typeof (DivService),
                "division/singlecall", WellKnownObjectMode.SingleCall); // SINGLECALL
            Console.WriteLine("Appuyez sur [Entrée] pour quitter.");
            Console.ReadLine();
        }
    }
}


namespace Div.CAO.Host {
    using Div.ServiceContract;
    using Div.ServiceImpl;
    class DivHost {
        [STAThread]
        static void Main(string[] args) {
            // création et enregistrement du canal HTTP 8082
            ChannelServices.RegisterChannel(new HttpChannel(8082));
            // Client Activated Object
            RemotingConfiguration.RegisterActivatedServiceType(typeof (Div.ServiceImpl.DivService));
            Console.WriteLine("Appuyez sur [Entrée] pour quitter.");
            Console.ReadLine();
        }
    }
}
